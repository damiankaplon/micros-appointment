version: '3'
services:
  database-security:
    image: mongo:latest
    container_name: database-security
    ports:
      - '27017-27019:27017-27019'
    volumes:
      - database-security-data:/data/db
      - ../security-micro/src/main/docker/mongo-dev-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - network-security

  security-micro:
    image: damiankaplon/security-micro
    container_name: security-micro
    restart: unless-stopped
    ports:
      - '8080:8080'
    depends_on:
      - database-security
    networks:
      - network-security

  database-images:
    image: mongo:latest
    container_name: database-images
    volumes:
      - database-images-data:/data/db
      - ../image-storage-micro/src/main/docker/mongo-dev-init.js:/docker-entrypoint-initdb.d/mongo-dev-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - network-image-storage

  images-storage-micro:
    image: damiankaplon/images-storage-micro
    container_name: image-storage-micro
    volumes:
      - image-storage-volume:/local-storage
    restart: unless-stopped
    ports:
      - '8081:8081'
    depends_on:
      - database-images
    networks:
      - network-image-storage


volumes:
  database-images-data:
    external: true
  database-security-data:
    external: true
  image-storage-volume:
    external: true


networks:
  network-security:
    external: true
  network-image-storage:
    external: true
